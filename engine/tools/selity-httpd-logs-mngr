#!/usr/bin/perl

# Selity - When virtual hosting becomes scalable
# Copyright 2012 by Selity
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#
# @category		Selity
# @copyright	2012 by Selity | http://selity.net
# @author		Daniel Andreca <sci2tech@gmail.com>
# @link			http://selity.net Selity Home Site
# @license		http://www.gnu.org/licenses/gpl-2.0.html GPL v2

use strict;
use warnings;

use FindBin;
use lib "$FindBin::Bin/..";
use lib "$FindBin::Bin/../PerlLib";

use Selity::Debug;
use Selity::Boot;
use Selity::Execute;
use Selity::Mail;
use Selity::Database;
use Servers::httpd;
use Data::Dumper;

newDebug('selity-httpd-logs-mngr.log');

sub logs_start_up {

	umask(027);
	Selity::Boot->new()->init({nolock => 'yes'});

	0;
}

sub copy_logs{

	my $rs = 0;
	my $httpd	= Servers::httpd->factory();

	my $sql = "
		SELECT `domain_name`, `domain_name`as `mp`, `domain_admin_id` AS `id` FROM `domain` WHERE `domain_status` = 'ok'
		UNION
		SELECT `alias_name`, `domain_name`, `domain_admin_id` AS `id` FROM `domain_aliasses`
		JOIN `domain` using(`domain_id`) WHERE `alias_status` = 'ok'
		UNION
		SELECT CONCAT(`subdomain_name`, '.', `domain_name`), `domain_name`, `domain_admin_id` AS `id` FROM `subdomain`
		JOIN `domain` using(`domain_id`)  WHERE `subdomain_status` = 'ok'
		UNION
		SELECT CONCAT(`subdomain_alias_name`, '.', `alias_name`), `domain_name`, `domain_admin_id` AS `id` FROM `subdomain_alias`
		JOIN `domain_aliasses` using(`alias_id`)
		JOIN `domain` using(`domain_id`) WHERE `subdomain_alias_status` = 'ok'
	";
	my $rdata = Selity::Database->new()->factory()->doQuery('domain_name', $sql);

	if (ref $rdata ne 'HASH'){
		error("$rdata");
		Selity::Mail->new()->errmsg($rdata);
		$rs = 1;
	} else {
		foreach( keys %$rdata){
			my $groupName	=
			my $userName	=
								$main::selityConfig{SYSTEM_USER_PREFIX}.
								(
									$main::selityConfig{SYSTEM_USER_MIN_UID}
									+
									$rdata->{$_}->{id}
								);
			my $srcFolder	= "$httpd->{tplValues}->{'APACHE_USERS_LOG_DIR'}";
			my $destFolder	= "$main::selityConfig{'USER_HOME_DIR'}/$rdata->{$_}->{mp}/logs/";
			my $accessSRC	= "$srcFolder/$_-access.log";
			my $accessDST	= "$destFolder/$_-access.log";
			my $errorSRC	= "$srcFolder/$_-error.log";
			my $errorDST	= "$destFolder/$_-error.log";
			$rs |= Selity::Dir->new( dirname => $destFolder)->make({
				user	=> $userName,
				group	=> $groupName,
				mode	=> 0750
			}) unless -d $destFolder;
			$rs |= Selity::File->new(filename => $accessSRC)->copyFile($accessDST) if (-f $accessSRC);
			$rs |= Selity::File->new(filename => $accessDST)->owner($userName, $groupName) if (-f $accessDST);
			$rs |= Selity::File->new(filename => $accessDST)->mode(0640) if (-f $accessDST);
			$rs |= Selity::File->new(filename => $errorSRC)->copyFile($errorDST) if (-f $errorSRC);
			$rs |= Selity::File->new(filename => $errorDST)->owner($userName, $groupName) if (-f $errorDST);
			$rs |= Selity::File->new(filename => $errorDST)->mode(0640) if (-f $errorDST);
		}
	}

	$rs;
}

my $rs = 0;

exit 1 if logs_start_up();

$rs |= copy_logs();

exit $rs;

